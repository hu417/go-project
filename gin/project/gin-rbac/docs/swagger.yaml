basePath: /api/v1
definitions:
  dtos.CreatePermissionReqDTO:
    properties:
      api_group:
        description: API分组
        maxLength: 40
        type: string
      api_path:
        description: 请求路径
        maxLength: 255
        type: string
      description:
        description: 权限描述
        maxLength: 255
        type: string
      method:
        description: 请求方法
        maxLength: 10
        type: string
      name:
        description: 权限名称
        maxLength: 40
        type: string
    required:
    - api_group
    - api_path
    - method
    - name
    type: object
  dtos.CreateRolePermissionsByIDsReqDTO:
    properties:
      permission_id_list:
        description: 权限ID列表
        items:
          type: integer
        type: array
      role_id_list:
        description: 角色ID列表
        items:
          type: integer
        type: array
    required:
    - permission_id_list
    - role_id_list
    type: object
  dtos.CreateRoleReqDTO:
    properties:
      description:
        description: 角色描述
        maxLength: 255
        type: string
      name:
        description: 角色名称
        maxLength: 20
        type: string
    required:
    - name
    type: object
  dtos.CreateUserReqDTO:
    properties:
      email:
        description: 邮箱
        maxLength: 256
        type: string
      password:
        description: 密码
        maxLength: 20
        minLength: 8
        type: string
      phone_num:
        description: 手机号
        type: string
      username:
        description: 用户名
        maxLength: 15
        minLength: 1
        type: string
    required:
    - password
    - username
    type: object
  dtos.CreateUserRolesByIDsReqDTO:
    properties:
      role_id_list:
        description: 角色ID列表
        items:
          type: integer
        type: array
      user_id_list:
        description: 用户ID列表
        items:
          type: integer
        type: array
    required:
    - role_id_list
    - user_id_list
    type: object
  dtos.DeleteRolePermissionsByIDsReqDTO:
    properties:
      permission_id_list:
        description: 权限ID列表
        items:
          type: integer
        type: array
      role_id_list:
        description: 角色ID列表
        items:
          type: integer
        type: array
    required:
    - permission_id_list
    - role_id_list
    type: object
  dtos.DeleteUserRolesByIDsReqDTO:
    properties:
      role_id_list:
        description: 角色ID列表
        items:
          type: integer
        type: array
      user_id_list:
        description: 用户ID列表
        items:
          type: integer
        type: array
    required:
    - role_id_list
    - user_id_list
    type: object
  dtos.Filter:
    properties:
      field:
        description: 过滤字段
        type: string
      op:
        description: 操作符
        enum:
        - eq
        - neq
        - gt
        - gte
        - lt
        - lte
        - contains
        - not_contains
        type: string
      value:
        description: 过滤值
        type: string
    required:
    - op
    type: object
  dtos.GetFullUserResDTO:
    properties:
      avatar_url:
        description: 头像路径
        type: string
      created_at_format:
        description: '创建时间式化: "2006-01-02"'
        type: string
      deleted_at:
        description: 删除时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 用户ID
        type: integer
      intro:
        description: 简介
        type: string
      phone_num:
        description: 手机号
        type: string
      sex:
        description: 性别
        type: integer
      updated_at_format:
        description: '更新时间式化: "2006-01-02"'
        type: string
      username:
        description: 用户名
        type: string
    type: object
  dtos.GetImageResDTO:
    properties:
      created_at:
        description: 创建时间
        type: string
      id:
        description: 图片id
        type: integer
      image_url:
        description: 图片url
        type: string
    type: object
  dtos.GetPermissionDTOExample:
    properties:
      api_group:
        description: API分组
        type: string
      api_path:
        description: 请求路径
        type: string
      created_at:
        description: 创建时间
        type: string
      deleted_at:
        description: 删除时间
        type: string
      description:
        description: 权限描述
        type: string
      id:
        description: 权限ID
        type: integer
      method:
        description: 请求方法
        type: string
      name:
        description: 权限名称
        type: string
      updated_at:
        description: 更新时间
        type: string
    type: object
  dtos.GetRoleDTOExample:
    properties:
      created_at:
        description: 创建时间
        type: string
      deleted_at:
        description: 删除时间
        type: string
      description:
        description: 角色描述
        type: string
      id:
        description: 角色ID
        type: integer
      name:
        description: 角色名称
        type: string
      updated_at:
        description: 更新时间
        type: string
    type: object
  dtos.GetRolePermissionResDTOExample:
    properties:
      created_at:
        description: 创建时间
        type: string
      deleted_at:
        description: 删除时间
        type: string
      permission_action:
        description: 权限动作
        type: string
      permission_description:
        description: 权限描述
        type: string
      permission_id:
        description: 权限ID
        type: integer
      permission_name:
        description: 权限名称
        type: string
      role_id:
        description: 角色ID
        type: integer
      role_name:
        description: 角色名称
        type: string
    type: object
  dtos.GetUserRoleByIDResDTOExample:
    properties:
      created_at:
        description: 创建时间
        type: string
      deleted_at:
        description: 删除时间
        type: string
      role_description:
        description: 角色描述
        type: string
      role_id:
        description: 角色ID
        type: integer
      role_name:
        description: 角色名称
        type: string
      user_id:
        description: 用户ID
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  dtos.LoginUserReqDTO:
    properties:
      credential:
        description: 用户名、电话号码或电子邮件
        type: string
      password:
        description: 密码
        maxLength: 20
        minLength: 8
        type: string
    required:
    - credential
    - password
    type: object
  dtos.PaginationResultExample:
    properties:
      items:
        items: {}
        type: array
      page:
        type: integer
      pages:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dtos.PublicUserResDTO:
    properties:
      avatar_url:
        description: 头像路径
        type: string
      created_at_format:
        description: '创建时间格式化: "2006-01-02"'
        type: string
      id:
        description: 用户ID
        type: integer
      intro:
        description: 简介
        type: string
      sex:
        description: 性别
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  dtos.ResetPasswordReqDTO:
    properties:
      credential:
        description: 用户名、电话号码或电子邮件
        type: string
      new_password:
        description: 新密码
        type: string
    required:
    - new_password
    type: object
  dtos.RouterDTO:
    properties:
      api_path:
        description: 接口路径
        type: string
      method:
        description: 请求方法
        type: string
    type: object
  dtos.TokenResDTO:
    properties:
      token:
        description: 登录token
        type: string
    type: object
  dtos.UpdatePasswordReqDTO:
    properties:
      new_password:
        description: 新密码
        type: string
      old_password:
        description: 当前密码-旧密码
        type: string
    required:
    - new_password
    - old_password
    type: object
  dtos.UpdatePermissionReqDTO:
    properties:
      api_group:
        description: API分组
        maxLength: 40
        type: string
      api_path:
        description: 请求路径
        maxLength: 255
        type: string
      description:
        description: 权限描述
        maxLength: 255
        type: string
      method:
        description: 请求方法
        maxLength: 10
        type: string
      name:
        description: 权限名称
        maxLength: 40
        type: string
    required:
    - api_group
    - api_path
    - description
    - method
    - name
    type: object
  dtos.UpdateRoleReqDTO:
    properties:
      description:
        description: 角色描述
        maxLength: 255
        type: string
      name:
        description: 角色名称
        maxLength: 20
        type: string
    required:
    - description
    - name
    type: object
  dtos.UpdateUserAvatarReqDTO:
    properties:
      avatar_id:
        description: 头像ID
        type: integer
    required:
    - avatar_id
    type: object
  dtos.UpdateUserReqDTO:
    properties:
      email:
        description: 邮箱
        maxLength: 256
        type: string
      intro:
        description: 简介
        maxLength: 30
        type: string
      phone_num:
        description: 手机号
        type: string
      sex:
        description: '性别, 0: 未设置, 1: 男, 2: 女'
        enum:
        - 0
        - 1
        - 2
        type: integer
      username:
        description: 用户名
        maxLength: 15
        minLength: 1
        type: string
    type: object
  dtos.UploadImageResDTO:
    properties:
      created_at:
        description: 创建时间
        type: string
      id:
        description: 图片id
        type: integer
      image_url:
        description: 图片url
        type: string
    type: object
  response.Response:
    properties:
      code:
        description: 应用级别的错误代码，可选
        type: integer
      data:
        description: 实际响应数据，类型为 interface{}，意味着它可以是任何类型，具体类型在使用时确定。
      msg:
        description: 响应消息，提供人可读的响应信息
        type: string
    type: object
info:
  contact: {}
  description: 使用gin+vue3进行极速开发的全栈开发rbac权限管理基础平台.
  title: Gin-Vue3-RBAC Swagger API接口文档
  version: v1.1.1
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs a user in and returns an authentication token.
      parameters:
      - description: Login request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginUserReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with authentication token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.TokenResDTO'
              type: object
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns an authentication token.
      parameters:
      - description: Register request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with authentication token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.TokenResDTO'
              type: object
      summary: Register
      tags:
      - Auth
  /auth/user:
    delete:
      consumes:
      - application/json
      description: Deletes the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user deleted message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - Auth
    get:
      consumes:
      - application/json
      description: Gets the authenticated user's information.
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetFullUserResDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - Auth
    put:
      consumes:
      - application/json
      description: Updates the authenticated user's information.
      parameters:
      - description: Update user request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateUserReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user updated message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - Auth
  /auth/user/avatar:
    put:
      consumes:
      - application/json
      description: Updates the authenticated user's avatar.
      parameters:
      - description: Update avatar request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateUserAvatarReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user avatar updated message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update Avatar
      tags:
      - Auth
  /auth/user/password:
    put:
      consumes:
      - application/json
      description: Updates the authenticated user's password.
      parameters:
      - description: Update password request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdatePasswordReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user password updated message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update Password
      tags:
      - Auth
  /images/{id}:
    delete:
      description: Delete Image
      parameters:
      - description: Delete Image request
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with image information
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Image
      tags:
      - Image
    get:
      description: Get Image
      parameters:
      - description: Get Image request
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with image information
          schema:
            $ref: '#/definitions/dtos.GetImageResDTO'
      security:
      - ApiKeyAuth: []
      summary: Get Image
      tags:
      - Image
  /images/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload Image
      parameters:
      - description: Upload Image request
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with image information
          schema:
            $ref: '#/definitions/dtos.UploadImageResDTO'
      security:
      - ApiKeyAuth: []
      summary: Upload Image
      tags:
      - Image
  /permissions/:
    get:
      consumes:
      - application/json
      description: Get permissions list.
      parameters:
      - description: API分组
        in: query
        name: api_group
        type: string
      - description: 请求路径
        in: query
        name: api_path
        type: string
      - description: 权限描述
        in: query
        name: description
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 权限名称
        in: query
        name: name
        type: string
      - description: 排序顺序
        in: query
        name: order
        type: string
      - description: 当前页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 排序字段
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with permission list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.PaginationResultExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Permission List
      tags:
      - Permission
    post:
      consumes:
      - application/json
      description: Create permission.
      parameters:
      - description: Create permission request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreatePermissionReqDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully response with permission created message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create Permission
      tags:
      - Permission
  /permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete permission by id.
      parameters:
      - description: Delete permission request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with permission deleted message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Permission
      tags:
      - Permission
    get:
      consumes:
      - application/json
      description: Get permission by id.
      parameters:
      - description: Get permission request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with permission information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetPermissionDTOExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Permission
      tags:
      - Permission
    put:
      consumes:
      - application/json
      description: Update permission by id.
      parameters:
      - description: Get permission request parameters
        in: path
        name: id
        required: true
        type: integer
      - description: Update permission request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdatePermissionReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with permission updated message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update Permission
      tags:
      - Permission
  /permissions/{id}/recover:
    put:
      consumes:
      - application/json
      description: Recover permission.
      parameters:
      - description: Recover permission request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with permission recovered message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Recover Permission
      tags:
      - Permission
  /role-permissions/:
    delete:
      consumes:
      - application/json
      description: Delete rolePermissions by roleIDs and permissionIDs
      parameters:
      - description: Delete rolePermissions request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.DeleteRolePermissionsByIDsReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with rolePermissions deleted message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete RolePermissions
      tags:
      - RolePermission
    post:
      consumes:
      - application/json
      description: Create rolePermissions by roleIDs and permissionIDs
      parameters:
      - description: Create rolePermissions request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateRolePermissionsByIDsReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with rolePermissions created message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create RolePermissions
      tags:
      - RolePermission
  /role-permissions/permissions/{permissionID}/roles:
    get:
      consumes:
      - application/json
      description: Get rolePermissions by permissionID
      parameters:
      - description: Get rolePermission by permissionID request parameters
        in: path
        name: permissionID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with rolePermission list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  items:
                    $ref: '#/definitions/dtos.GetRolePermissionResDTOExample'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get RolePermissions
      tags:
      - RolePermission
  /role-permissions/roles/{roleID}/permissions:
    get:
      consumes:
      - application/json
      description: Get rolePermissions by roleID
      parameters:
      - description: Get rolePermissions by roleID request parameters
        in: path
        name: roleID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with rolePermission list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  items:
                    $ref: '#/definitions/dtos.GetRolePermissionResDTOExample'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get RolePermissions
      tags:
      - RolePermission
  /role-permissions/roles/{roleID}/permissions/{permissionID}:
    get:
      consumes:
      - application/json
      description: Get rolePermission by roleID and permissionID
      parameters:
      - description: Get rolePermission request parameters
        in: path
        name: roleID
        required: true
        type: integer
      - description: Get rolePermission request parameters
        in: path
        name: permissionID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with rolePermission information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetRolePermissionResDTOExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get RolePermission
      tags:
      - RolePermission
  /roles/:
    get:
      consumes:
      - application/json
      description: Get role list.
      parameters:
      - description: 角色名称
        in: query
        maxLength: 20
        name: name
        type: string
      - description: 排序顺序
        in: query
        name: order
        type: string
      - description: 当前页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 排序字段
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with role list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.PaginationResultExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Role List
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create role.
      parameters:
      - description: Create role request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateRoleReqDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully response with role created message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create Role
      tags:
      - Role
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role by id.
      parameters:
      - description: Delete role request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with role deleted message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Get role by id.
      parameters:
      - description: Get role request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with role information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetRoleDTOExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Role
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update role by id.
      parameters:
      - description: Get Role Request parameters
        in: path
        name: id
        required: true
        type: integer
      - description: Update Role Request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateRoleReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with role updated message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update Role
      tags:
      - Role
  /roles/{id}/recover:
    put:
      consumes:
      - application/json
      description: Recover role by id.
      parameters:
      - description: Recover role request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with role recovered message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Recover Role
      tags:
      - Role
  /system/health:
    get:
      consumes:
      - application/json
      description: System health check
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with health status
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: System Health Check
      tags:
      - System
  /system/routes:
    get:
      consumes:
      - application/json
      description: Get routes
      produces:
      - application/json
      responses:
        "200":
          description: Successfully response with router information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.RouterDTO'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Routes
      tags:
      - System
  /user-roles/:
    delete:
      consumes:
      - application/json
      description: Delete userRoles by userIDs and roleIDs
      parameters:
      - description: Delete userRoles request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.DeleteUserRolesByIDsReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with userRoles message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete UserRoles
      tags:
      - UserRole
    post:
      consumes:
      - application/json
      description: Create userRoles by userIDs and roleIDs
      parameters:
      - description: Create userRoles request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserRolesByIDsReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with userRoles message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create UserRoles
      tags:
      - UserRole
  /user-roles/{userID}/{roleID}:
    get:
      consumes:
      - application/json
      description: Get userRole by userID and roleID
      parameters:
      - description: Get userRole request parameters
        in: path
        name: userID
        required: true
        type: integer
      - description: Get userRole request parameters
        in: path
        name: roleID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user-role information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetUserRoleByIDResDTOExample'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get UserRole
      tags:
      - UserRole
  /user-roles/role/{roleID}:
    get:
      consumes:
      - application/json
      description: Get userRoles by roleID
      parameters:
      - description: Get userRoles by roleID request parameters
        in: path
        name: roleID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with userRoles list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  items:
                    $ref: '#/definitions/dtos.GetUserRoleByIDResDTOExample'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get UserRoles
      tags:
      - UserRole
  /user-roles/user/{userID}:
    get:
      consumes:
      - application/json
      description: Get userRoles by userID
      parameters:
      - description: Get UserRoles By UserID Request parameters
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with UserRoles list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  items:
                    $ref: '#/definitions/dtos.GetUserRoleByIDResDTOExample'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get UserRoles
      tags:
      - UserRole
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id.
      parameters:
      - description: Delete user request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user deleted message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by id.
      parameters:
      - description: Get full user request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.GetFullUserResDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - User
  /users/{id}/public:
    get:
      consumes:
      - application/json
      description: Get public user by id.
      parameters:
      - description: Public user info request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with public user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.PublicUserResDTO'
              type: object
      summary: Get Public User
      tags:
      - User
  /users/{id}/recover:
    put:
      consumes:
      - application/json
      description: Recover user by id.
      parameters:
      - description: Recover user request parameters
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user recover message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Recover User
      tags:
      - User
  /users/public:
    get:
      consumes:
      - application/json
      description: Get public user list.
      parameters:
      - description: 排序顺序
        in: query
        name: order
        type: string
      - description: 当前页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 排序字段
        in: query
        name: sort_by
        type: string
      - description: 关键词
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with public user list information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  $ref: '#/definitions/dtos.PaginationResultExample'
              type: object
      summary: Get Public User List
      tags:
      - User
  /users/reset_password:
    put:
      consumes:
      - application/json
      description: Reset user's password.
      parameters:
      - description: Reset user password request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.ResetPasswordReqDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user password reset message
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                Data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Reset Password
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
