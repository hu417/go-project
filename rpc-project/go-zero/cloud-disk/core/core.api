// 用户登录
service core-api {
	@doc(
		summary: "用户登录"
	)
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginResponse)
	
	@doc(
		summary: "用户详情"
	)
	@handler UserDetails
	get /user/details(UserDetailsReq) returns (UserDetailsResp)
	
	@doc(
		summary: "邮箱验证码"
	)
	@handler MailCodeSend
	post /mail/send(MailCodeReq) returns (MailCodeResp)
	
	@doc(
		summary: "用户注册"
	)
	@handler UserRegister
	post /user/register(UserRegisterReq) returns (UserRegisterResp)
	
	@doc(
		summary: "获取分享文件详情"
	)
	@handler UserShareBasicInfo
	get /user/share/info(UserShareBasicInfoReq) returns (UserShareBasicInfoResp)
	
}

@server(
	middleware: Auth  // 添加Auth中间件
)
service core-api {   // 注意: service只有一个
	@doc(
		summary: "文件上传"
	)
	@handler FileUpload
	post /file/upload(FileUploadReq) returns (FileUploadResp)
	
	@doc(
		summary: "用户文件的关联存储"
	)
	@handler UserRepositorySave
	post /user/repository/save(UserRepositorySaveReq) returns (UserRepositorySaveResp)
	
	@doc(
		summary: "用户文件列表"
	)
	@handler UserFileList
	get /user/file/list(UserFileListReq) returns (UserFileListResp)
	
	@doc(
		summary: "用户文件名修改"
	)
	@handler UserFileUpdate
	post /user/file/update(UserFileUpdateReq) returns (UserFileUpdateResp)
	
	@doc(
		summary: "用户文件夹创建"
	)
	@handler UserFolderCreate
	post /user/folder/create(UserFolderCreateReq) returns (UserFolderCreateResp)
	
	@doc(
		summary: "用户-文件删除"
	)
	@handler UserFileDelete
	delete /user/file/delete(UserFileDeleteReq) returns (UserFileDeleteResp)
	
	@doc(
		summary: "用户-文件移动"
	)
	@handler UserFileMove
	put /user/file/move(UserFileMoveReq) returns (UserFileMoveResp)
	
	@doc(
		summary: "用户-创建文件分享"
	)
	@handler UserShareBasicCreate
	post /user/share/create(UserShareBasicCreateReq) returns (UserShareBasicCreateResp)
	
	@doc(
		summary: "用户-资源保存"
	)
	@handler UserShareBasicSave
	post /user/share/save(UserShareBasicSaveReq) returns ( UserShareBasicSaveResp)
	
	@doc(
		summary: "刷新token过期时间"
	)
	@handler UserRefreshToken
	post /user/refresh/token(UserRefreshTokenReq) returns ( UserRefreshTokenResp)
	
	@doc(
		summary: "文件秒传"
	)
	@handler UserFileSecondUpload
	post /user/file/secondupload(UserFileSecondUploadReq) returns ( UserFileSecondUploadResp)
	
	@doc(
		summary: "文件上传前预处理"
	)
	@handler UserFileUploadPrepare
	post /user/file/upload/prepare(UserFileUploadPrepareReq) returns ( UserFileUploadPrepareResp)
	
	@doc(
		summary: "COS文件上传-分片上传"
	)
	@handler UserFileChunkUpload
	post /user/file/chunk/upload(UserFileChunkUploadReq) returns ( UserFileChunkUploadResp)
	
	@doc(
		summary: "COS切片文件上传完成"
	)
	@handler UserFileUploadChunkComplete
	post /user/file/upload/chunk/complete(UserFileUploadChunkCompleteReq) returns ( UserFileUploadChunkCompleteResp)
	
}

// 用户登录
type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

// 用户详情
type (
	UserDetailsReq {
		Identity string `json:"identity"`
	}

	UserDetailsResp {
		Name  string `json:"name"`
		Email string `json:"email"`
	}
)

// 邮箱验证码
type (
	MailCodeReq {
		Email string `json:"email"`
	}

	MailCodeResp {
		Msg  string `json:"msg"`
		Code string `json:"code"`
	}
)

// 用户注册
type (
	UserRegisterReq {
		// 用户名
		Name string `json:"name"`
		// 密码
		Password string `json:"password"`
		// 邮箱
		Email string `json:"email"`
		// 验证码
		Code string `json:"code"`
	}

	UserRegisterResp {
		Name     string `json:"name"`
		Password string `json:"password"`
		Email    string `json:"email"`
		Code     string `json:"code"`
	}
)

// 文件上传
type (
	FileUploadReq {
		Hash string `json:"hash,optional"`
		Name string `json:"name,optional"`
		Ext  string `json:"ext,optional"`
		Size int    `json:"size,optional"`
		Path string `json:"path,optional"`
	}

	FileUploadResp {
		Identity string `json:"identity"`
		Ext      string `json:"ext"`
		Name     string `json:"name"`
	}
)

// 用户关联存储
type (
	UserRepositorySaveReq {
		ParentId           int    `json:"parentid" description:"父级id"`
		RepositoryIdentity string `json:"repositoryIdentity"`
		Ext                string `json:"ext"`
		Name               string `json:"name"`
	}
	UserRepositorySaveResp {
		Identity string `json:"identity"`
	}
)

// 用户文件列表
type (
	UserFileListReq {
		Id   int `json:"id,optional"`
		Page int `json:"page,optional" description:"页数"`
		Size int `json:"size,optional" description:"每页条数"`
	}
	UserFileListResp {
		List  []*UserFile `json:"list,optional"`
		Count int64       `json:"count,optional"`
	}

	UserFile {
		Id                 int    `json:"id"`
		Identity           string `json:"identity"`
		RepositoryIdentity string `json:"repository_identity"`
		Name               string `json:"name"`
		Ext                string `json:"ext"`
		Path               string `json:"path"`
		Size               string `json:"size"`
	}
)

// 用户 - 文件名修改
type (
	UserFileUpdateReq {
		Identity string `json:"identity"`
		Name     string `json:"name"`
	}

	UserFileUpdateResp {
		Identity string `json:"identity"`
		Name     string `json:"name"`
	}
)

// 用户-文件夹创建
type (
	UserFolderCreateReq {
		ParentId int    `json:"parent_id"`
		Name     string `json:"name"`
	}

	UserFolderCreateResp {
		Identity string `json:"identity"`
		Name     string `json:"name"`
	}
)

// 用户-文件删除
type (
	UserFileDeleteReq {
		Identity string `json:"identity"`
	}
	UserFileDeleteResp {
		Message string `json:"message"`
	}
)

// 用户-文件移动
type (
	UserFileMoveReq {
		Identity       string `json:"identity"`
		ParentIdentity int    `json:"parent_identity"`
	}
	UserFileMoveResp {
		Message string `json:"message"`
	}
)

// 用户-创建文件分享
type (
	UserShareBasicCreateReq {
		UserRepositoryIdentity string `json:"user_repository_identity"`
		Expiredtime            int    `json:"expired_time"`
	}

	// 返回该信息的Identity,即uuid
	UserShareBasicCreateResp {
		Identity string `json:"identity"`
	}
)

// 用户分享文件详情
type (
	UserShareBasicInfoReq {
		Identity string `json:"identity"`
	}
	UserShareBasicInfoResp {
		RepositoryIdentity string `json:"repository_identity"`
		Name               string `json:"name"`
		Ext                string `json:"ext"`
		Size               int    `json:"size"`
		Path               string `json:"path"`
	}
)

// 用户 - 分享文件保存
type (
	UserShareBasicSaveReq {
		RepositoryIdentity string `json:"repository_identity"`
		ParentId           int    `json:"parent_id"`
	}
	UserShareBasicSaveResp {
		Identity string `json:"identity"`
	}
)

// 用户-刷新token
type (
	UserRefreshTokenReq  struct{}
	UserRefreshTokenResp {
		Token        string `json:"token"`
		RefreshToken string `json:"refresh_token"`
		Message      string `json:"message"`
	}
)

// 用户-文件秒传
type (
	UserFileSecondUploadReq {
		Md5  string `json:"md5"`
		Name string `json:"name"`
	}
	UserFileSecondUploadResp {
		Identity string `json:"identity"`
		UploadId string `json:"uploadId"`
	}
)

// 文件上传前预处理
type (
	UserFileUploadPrepareReq {
		Md5  string `json:"md5"`
		Name string `json:"name"`
		Ext  string `json:"ext"`
	}
	UserFileUploadPrepareResp {
		Identity string `json:"identity"`
		UploadId string `json:"upload_id"`
		Key      string `json:"key"`
	}
)

// COS 文件上传 - 分片上传
type (
	UserFileChunkUploadReq { // form_data
		// key, upload_id, chunk文件，part_number
	}
	UserFileChunkUploadResp {
		Etag string `json:"etag" description:"获取分片文件chunk的md5值"`
	}
)

// COS文件上传：切片文件上传完成
type (
	UserFileUploadChunkCompleteReq {
		Key        string       `json:"key"`
		UploadId   string       `json:"upload_id"`
		CosObjects []CosObjects `json:"cos_objects"`
	}
	CosObjects {
		PartNumber int    `json:"part_number"`
		Etag       string `json:"etag"`
	}
	UserFileUploadChunkCompleteResp {
	}
)